/* soapH.h
   Generated by gSOAP 2.7.17 from shopinterface.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns1__updateOrdersRead
#define SOAP_TYPE_ns1__updateOrdersRead (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__updateOrdersRead(struct soap*, struct ns1__updateOrdersRead *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__updateOrdersRead(struct soap*, const struct ns1__updateOrdersRead *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__updateOrdersRead(struct soap*, const char*, int, const struct ns1__updateOrdersRead *, const char*);
SOAP_FMAC3 struct ns1__updateOrdersRead * SOAP_FMAC4 soap_in_ns1__updateOrdersRead(struct soap*, const char*, struct ns1__updateOrdersRead *, const char*);

#define soap_write_ns1__updateOrdersRead(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__updateOrdersRead(soap, data), 0) || soap_put_ns1__updateOrdersRead(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__updateOrdersRead(struct soap*, const struct ns1__updateOrdersRead *, const char*, const char*);

#define soap_read_ns1__updateOrdersRead(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__updateOrdersRead(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__updateOrdersRead * SOAP_FMAC4 soap_get_ns1__updateOrdersRead(struct soap*, struct ns1__updateOrdersRead *, const char*, const char*);

#define soap_new_ns1__updateOrdersRead(soap, n) soap_instantiate_ns1__updateOrdersRead(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__updateOrdersRead(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__updateOrdersRead * SOAP_FMAC2 soap_instantiate_ns1__updateOrdersRead(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__updateOrdersRead(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__updateOrdersReadResponse
#define SOAP_TYPE_ns1__updateOrdersReadResponse (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__updateOrdersReadResponse(struct soap*, struct ns1__updateOrdersReadResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__updateOrdersReadResponse(struct soap*, const struct ns1__updateOrdersReadResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__updateOrdersReadResponse(struct soap*, const char*, int, const struct ns1__updateOrdersReadResponse *, const char*);
SOAP_FMAC3 struct ns1__updateOrdersReadResponse * SOAP_FMAC4 soap_in_ns1__updateOrdersReadResponse(struct soap*, const char*, struct ns1__updateOrdersReadResponse *, const char*);

#define soap_write_ns1__updateOrdersReadResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__updateOrdersReadResponse(soap, data), 0) || soap_put_ns1__updateOrdersReadResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__updateOrdersReadResponse(struct soap*, const struct ns1__updateOrdersReadResponse *, const char*, const char*);

#define soap_read_ns1__updateOrdersReadResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__updateOrdersReadResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__updateOrdersReadResponse * SOAP_FMAC4 soap_get_ns1__updateOrdersReadResponse(struct soap*, struct ns1__updateOrdersReadResponse *, const char*, const char*);

#define soap_new_ns1__updateOrdersReadResponse(soap, n) soap_instantiate_ns1__updateOrdersReadResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__updateOrdersReadResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__updateOrdersReadResponse * SOAP_FMAC2 soap_instantiate_ns1__updateOrdersReadResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__updateOrdersReadResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getOrder
#define SOAP_TYPE_ns1__getOrder (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getOrder(struct soap*, struct ns1__getOrder *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getOrder(struct soap*, const struct ns1__getOrder *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getOrder(struct soap*, const char*, int, const struct ns1__getOrder *, const char*);
SOAP_FMAC3 struct ns1__getOrder * SOAP_FMAC4 soap_in_ns1__getOrder(struct soap*, const char*, struct ns1__getOrder *, const char*);

#define soap_write_ns1__getOrder(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__getOrder(soap, data), 0) || soap_put_ns1__getOrder(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getOrder(struct soap*, const struct ns1__getOrder *, const char*, const char*);

#define soap_read_ns1__getOrder(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getOrder(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__getOrder * SOAP_FMAC4 soap_get_ns1__getOrder(struct soap*, struct ns1__getOrder *, const char*, const char*);

#define soap_new_ns1__getOrder(soap, n) soap_instantiate_ns1__getOrder(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__getOrder(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__getOrder * SOAP_FMAC2 soap_instantiate_ns1__getOrder(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getOrder(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getOrderResponse
#define SOAP_TYPE_ns1__getOrderResponse (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getOrderResponse(struct soap*, struct ns1__getOrderResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getOrderResponse(struct soap*, const struct ns1__getOrderResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getOrderResponse(struct soap*, const char*, int, const struct ns1__getOrderResponse *, const char*);
SOAP_FMAC3 struct ns1__getOrderResponse * SOAP_FMAC4 soap_in_ns1__getOrderResponse(struct soap*, const char*, struct ns1__getOrderResponse *, const char*);

#define soap_write_ns1__getOrderResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__getOrderResponse(soap, data), 0) || soap_put_ns1__getOrderResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getOrderResponse(struct soap*, const struct ns1__getOrderResponse *, const char*, const char*);

#define soap_read_ns1__getOrderResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getOrderResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__getOrderResponse * SOAP_FMAC4 soap_get_ns1__getOrderResponse(struct soap*, struct ns1__getOrderResponse *, const char*, const char*);

#define soap_new_ns1__getOrderResponse(soap, n) soap_instantiate_ns1__getOrderResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__getOrderResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__getOrderResponse * SOAP_FMAC2 soap_instantiate_ns1__getOrderResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getOrderResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getOrders
#define SOAP_TYPE_ns1__getOrders (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getOrders(struct soap*, struct ns1__getOrders *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getOrders(struct soap*, const struct ns1__getOrders *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getOrders(struct soap*, const char*, int, const struct ns1__getOrders *, const char*);
SOAP_FMAC3 struct ns1__getOrders * SOAP_FMAC4 soap_in_ns1__getOrders(struct soap*, const char*, struct ns1__getOrders *, const char*);

#define soap_write_ns1__getOrders(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__getOrders(soap, data), 0) || soap_put_ns1__getOrders(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getOrders(struct soap*, const struct ns1__getOrders *, const char*, const char*);

#define soap_read_ns1__getOrders(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getOrders(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__getOrders * SOAP_FMAC4 soap_get_ns1__getOrders(struct soap*, struct ns1__getOrders *, const char*, const char*);

#define soap_new_ns1__getOrders(soap, n) soap_instantiate_ns1__getOrders(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__getOrders(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__getOrders * SOAP_FMAC2 soap_instantiate_ns1__getOrders(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getOrders(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getOrdersResponse
#define SOAP_TYPE_ns1__getOrdersResponse (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getOrdersResponse(struct soap*, struct ns1__getOrdersResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getOrdersResponse(struct soap*, const struct ns1__getOrdersResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getOrdersResponse(struct soap*, const char*, int, const struct ns1__getOrdersResponse *, const char*);
SOAP_FMAC3 struct ns1__getOrdersResponse * SOAP_FMAC4 soap_in_ns1__getOrdersResponse(struct soap*, const char*, struct ns1__getOrdersResponse *, const char*);

#define soap_write_ns1__getOrdersResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__getOrdersResponse(soap, data), 0) || soap_put_ns1__getOrdersResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getOrdersResponse(struct soap*, const struct ns1__getOrdersResponse *, const char*, const char*);

#define soap_read_ns1__getOrdersResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getOrdersResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__getOrdersResponse * SOAP_FMAC4 soap_get_ns1__getOrdersResponse(struct soap*, struct ns1__getOrdersResponse *, const char*, const char*);

#define soap_new_ns1__getOrdersResponse(soap, n) soap_instantiate_ns1__getOrdersResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__getOrdersResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__getOrdersResponse * SOAP_FMAC2 soap_instantiate_ns1__getOrdersResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getOrdersResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__updateStock
#define SOAP_TYPE_ns1__updateStock (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__updateStock(struct soap*, struct ns1__updateStock *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__updateStock(struct soap*, const struct ns1__updateStock *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__updateStock(struct soap*, const char*, int, const struct ns1__updateStock *, const char*);
SOAP_FMAC3 struct ns1__updateStock * SOAP_FMAC4 soap_in_ns1__updateStock(struct soap*, const char*, struct ns1__updateStock *, const char*);

#define soap_write_ns1__updateStock(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__updateStock(soap, data), 0) || soap_put_ns1__updateStock(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__updateStock(struct soap*, const struct ns1__updateStock *, const char*, const char*);

#define soap_read_ns1__updateStock(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__updateStock(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__updateStock * SOAP_FMAC4 soap_get_ns1__updateStock(struct soap*, struct ns1__updateStock *, const char*, const char*);

#define soap_new_ns1__updateStock(soap, n) soap_instantiate_ns1__updateStock(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__updateStock(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__updateStock * SOAP_FMAC2 soap_instantiate_ns1__updateStock(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__updateStock(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__updateStockResponse
#define SOAP_TYPE_ns1__updateStockResponse (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__updateStockResponse(struct soap*, struct ns1__updateStockResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__updateStockResponse(struct soap*, const struct ns1__updateStockResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__updateStockResponse(struct soap*, const char*, int, const struct ns1__updateStockResponse *, const char*);
SOAP_FMAC3 struct ns1__updateStockResponse * SOAP_FMAC4 soap_in_ns1__updateStockResponse(struct soap*, const char*, struct ns1__updateStockResponse *, const char*);

#define soap_write_ns1__updateStockResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__updateStockResponse(soap, data), 0) || soap_put_ns1__updateStockResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__updateStockResponse(struct soap*, const struct ns1__updateStockResponse *, const char*, const char*);

#define soap_read_ns1__updateStockResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__updateStockResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__updateStockResponse * SOAP_FMAC4 soap_get_ns1__updateStockResponse(struct soap*, struct ns1__updateStockResponse *, const char*, const char*);

#define soap_new_ns1__updateStockResponse(soap, n) soap_instantiate_ns1__updateStockResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__updateStockResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__updateStockResponse * SOAP_FMAC2 soap_instantiate_ns1__updateStockResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__updateStockResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__updateClasses
#define SOAP_TYPE_ns1__updateClasses (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__updateClasses(struct soap*, struct ns1__updateClasses *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__updateClasses(struct soap*, const struct ns1__updateClasses *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__updateClasses(struct soap*, const char*, int, const struct ns1__updateClasses *, const char*);
SOAP_FMAC3 struct ns1__updateClasses * SOAP_FMAC4 soap_in_ns1__updateClasses(struct soap*, const char*, struct ns1__updateClasses *, const char*);

#define soap_write_ns1__updateClasses(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__updateClasses(soap, data), 0) || soap_put_ns1__updateClasses(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__updateClasses(struct soap*, const struct ns1__updateClasses *, const char*, const char*);

#define soap_read_ns1__updateClasses(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__updateClasses(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__updateClasses * SOAP_FMAC4 soap_get_ns1__updateClasses(struct soap*, struct ns1__updateClasses *, const char*, const char*);

#define soap_new_ns1__updateClasses(soap, n) soap_instantiate_ns1__updateClasses(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__updateClasses(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__updateClasses * SOAP_FMAC2 soap_instantiate_ns1__updateClasses(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__updateClasses(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__updateClassesResponse
#define SOAP_TYPE_ns1__updateClassesResponse (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__updateClassesResponse(struct soap*, struct ns1__updateClassesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__updateClassesResponse(struct soap*, const struct ns1__updateClassesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__updateClassesResponse(struct soap*, const char*, int, const struct ns1__updateClassesResponse *, const char*);
SOAP_FMAC3 struct ns1__updateClassesResponse * SOAP_FMAC4 soap_in_ns1__updateClassesResponse(struct soap*, const char*, struct ns1__updateClassesResponse *, const char*);

#define soap_write_ns1__updateClassesResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__updateClassesResponse(soap, data), 0) || soap_put_ns1__updateClassesResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__updateClassesResponse(struct soap*, const struct ns1__updateClassesResponse *, const char*, const char*);

#define soap_read_ns1__updateClassesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__updateClassesResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__updateClassesResponse * SOAP_FMAC4 soap_get_ns1__updateClassesResponse(struct soap*, struct ns1__updateClassesResponse *, const char*, const char*);

#define soap_new_ns1__updateClassesResponse(soap, n) soap_instantiate_ns1__updateClassesResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__updateClassesResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__updateClassesResponse * SOAP_FMAC2 soap_instantiate_ns1__updateClassesResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__updateClassesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__updateProducts
#define SOAP_TYPE_ns1__updateProducts (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__updateProducts(struct soap*, struct ns1__updateProducts *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__updateProducts(struct soap*, const struct ns1__updateProducts *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__updateProducts(struct soap*, const char*, int, const struct ns1__updateProducts *, const char*);
SOAP_FMAC3 struct ns1__updateProducts * SOAP_FMAC4 soap_in_ns1__updateProducts(struct soap*, const char*, struct ns1__updateProducts *, const char*);

#define soap_write_ns1__updateProducts(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__updateProducts(soap, data), 0) || soap_put_ns1__updateProducts(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__updateProducts(struct soap*, const struct ns1__updateProducts *, const char*, const char*);

#define soap_read_ns1__updateProducts(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__updateProducts(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__updateProducts * SOAP_FMAC4 soap_get_ns1__updateProducts(struct soap*, struct ns1__updateProducts *, const char*, const char*);

#define soap_new_ns1__updateProducts(soap, n) soap_instantiate_ns1__updateProducts(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__updateProducts(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__updateProducts * SOAP_FMAC2 soap_instantiate_ns1__updateProducts(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__updateProducts(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__updateProductsResponse
#define SOAP_TYPE_ns1__updateProductsResponse (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__updateProductsResponse(struct soap*, struct ns1__updateProductsResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__updateProductsResponse(struct soap*, const struct ns1__updateProductsResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__updateProductsResponse(struct soap*, const char*, int, const struct ns1__updateProductsResponse *, const char*);
SOAP_FMAC3 struct ns1__updateProductsResponse * SOAP_FMAC4 soap_in_ns1__updateProductsResponse(struct soap*, const char*, struct ns1__updateProductsResponse *, const char*);

#define soap_write_ns1__updateProductsResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__updateProductsResponse(soap, data), 0) || soap_put_ns1__updateProductsResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__updateProductsResponse(struct soap*, const struct ns1__updateProductsResponse *, const char*, const char*);

#define soap_read_ns1__updateProductsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__updateProductsResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__updateProductsResponse * SOAP_FMAC4 soap_get_ns1__updateProductsResponse(struct soap*, struct ns1__updateProductsResponse *, const char*, const char*);

#define soap_new_ns1__updateProductsResponse(soap, n) soap_instantiate_ns1__updateProductsResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__updateProductsResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__updateProductsResponse * SOAP_FMAC2 soap_instantiate_ns1__updateProductsResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__updateProductsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#endif

/* End of soapH.h */

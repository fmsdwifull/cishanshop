/* soapClient.cpp
   Generated by gSOAP 2.7.17 from shopinterface.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

//byliu
#include "common.h"
extern SipInfo  usrAuth; //用户信息


SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.17 2014-12-09 03:50:09 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__updateProducts(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_pwd, char *_xmlDoc, char *&_updateProductsReturn)
{	struct ns1__updateProducts soap_tmp_ns1__updateProducts;
	struct ns1__updateProductsResponse *soap_tmp_ns1__updateProductsResponse;
	if (!soap_endpoint)
	{
		//soap_endpoint = "http://10.10.100.48:88/OAapp/WebObjects/OAapp.woa/ws/Services";

		char serverURL[128];
	
		char *serverpath="/OAapp/WebObjects/OAapp.woa/ws/Services";
		strcat(serverURL,usrAuth.serverip);
		strcat(serverURL,serverpath);
		soap_endpoint=serverURL;
	}     

	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__updateProducts._pwd = _pwd;
	soap_tmp_ns1__updateProducts._xmlDoc = _xmlDoc;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__updateProducts(soap, &soap_tmp_ns1__updateProducts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__updateProducts(soap, &soap_tmp_ns1__updateProducts, "ns1:updateProducts", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__updateProducts(soap, &soap_tmp_ns1__updateProducts, "ns1:updateProducts", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	_updateProductsReturn = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__updateProductsResponse = soap_get_ns1__updateProductsResponse(soap, NULL, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_updateProductsReturn = soap_tmp_ns1__updateProductsResponse->_updateProductsReturn;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__updateClasses(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_pwd, char *_xmlDoc, char *&_updateClassesReturn)
{	
	struct ns1__updateClasses soap_tmp_ns1__updateClasses;
	struct ns1__updateClassesResponse *soap_tmp_ns1__updateClassesResponse;
	if (!soap_endpoint)
	{
		//soap_endpoint = "http://10.10.100.48:88/OAapp/WebObjects/OAapp.woa/ws/Services";
		char serverURL[128];
		char *serverpath="/OAapp/WebObjects/OAapp.woa/ws/Services";
		strcpy(serverURL,usrAuth.serverip);
		strcat(serverURL,serverpath);
		soap_endpoint=serverURL;
	}    
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__updateClasses._pwd = _pwd;
	soap_tmp_ns1__updateClasses._xmlDoc = _xmlDoc;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__updateClasses(soap, &soap_tmp_ns1__updateClasses);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__updateClasses(soap, &soap_tmp_ns1__updateClasses, "ns1:updateClasses", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__updateClasses(soap, &soap_tmp_ns1__updateClasses, "ns1:updateClasses", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	_updateClassesReturn = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__updateClassesResponse = soap_get_ns1__updateClassesResponse(soap, NULL, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_updateClassesReturn = soap_tmp_ns1__updateClassesResponse->_updateClassesReturn;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__updateStock(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_pwd, char *_xmlDoc, char *&_updateStockReturn)
{	struct ns1__updateStock soap_tmp_ns1__updateStock;
	struct ns1__updateStockResponse *soap_tmp_ns1__updateStockResponse;
	if (!soap_endpoint)
	{
		//soap_endpoint = "http://10.10.100.48:88/OAapp/WebObjects/OAapp.woa/ws/Services";

		char serverURL[128];
		char *serverpath="/OAapp/WebObjects/OAapp.woa/ws/Services";
		strcpy(serverURL,usrAuth.serverip);
		strcat(serverURL,serverpath);
		soap_endpoint=serverURL;
	}    
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__updateStock._pwd = _pwd;
	soap_tmp_ns1__updateStock._xmlDoc = _xmlDoc;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__updateStock(soap, &soap_tmp_ns1__updateStock);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__updateStock(soap, &soap_tmp_ns1__updateStock, "ns1:updateStock", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__updateStock(soap, &soap_tmp_ns1__updateStock, "ns1:updateStock", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	_updateStockReturn = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__updateStockResponse = soap_get_ns1__updateStockResponse(soap, NULL, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_updateStockReturn = soap_tmp_ns1__updateStockResponse->_updateStockReturn;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__getOrders(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_pwd, char *&_getOrdersReturn)
{	struct ns1__getOrders soap_tmp_ns1__getOrders;
	struct ns1__getOrdersResponse *soap_tmp_ns1__getOrdersResponse;
	if (!soap_endpoint)
	{
		//soap_endpoint = "http://10.10.100.48:88/OAapp/WebObjects/OAapp.woa/ws/Services";

		char serverURL[128];
		char *serverpath="/OAapp/WebObjects/OAapp.woa/ws/Services";
		strcpy(serverURL,usrAuth.serverip);
		strcat(serverURL,serverpath);
		soap_endpoint=serverURL;
	}    
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__getOrders._pwd = _pwd;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__getOrders(soap, &soap_tmp_ns1__getOrders);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__getOrders(soap, &soap_tmp_ns1__getOrders, "ns1:getOrders", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__getOrders(soap, &soap_tmp_ns1__getOrders, "ns1:getOrders", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	_getOrdersReturn = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__getOrdersResponse = soap_get_ns1__getOrdersResponse(soap, NULL, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_getOrdersReturn = soap_tmp_ns1__getOrdersResponse->_getOrdersReturn;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__getOrder(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_pwd, char *_xmlDoc, char *&_getOrderReturn)
{	struct ns1__getOrder soap_tmp_ns1__getOrder;
	struct ns1__getOrderResponse *soap_tmp_ns1__getOrderResponse;
	if (!soap_endpoint)
	{
		//soap_endpoint = "http://10.10.100.48:88/OAapp/WebObjects/OAapp.woa/ws/Services";

		char serverURL[128];
		char *serverpath="/OAapp/WebObjects/OAapp.woa/ws/Services";
		strcpy(serverURL,usrAuth.serverip);
		strcat(serverURL,serverpath);
		soap_endpoint=serverURL;
	}    
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__getOrder._pwd = _pwd;
	soap_tmp_ns1__getOrder._xmlDoc = _xmlDoc;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__getOrder(soap, &soap_tmp_ns1__getOrder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__getOrder(soap, &soap_tmp_ns1__getOrder, "ns1:getOrder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__getOrder(soap, &soap_tmp_ns1__getOrder, "ns1:getOrder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	_getOrderReturn = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__getOrderResponse = soap_get_ns1__getOrderResponse(soap, NULL, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_getOrderReturn = soap_tmp_ns1__getOrderResponse->_getOrderReturn;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__updateOrdersRead(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_pwd, char *_xmlDoc, char *&_updateOrdersReadReturn)
{	struct ns1__updateOrdersRead soap_tmp_ns1__updateOrdersRead;
	struct ns1__updateOrdersReadResponse *soap_tmp_ns1__updateOrdersReadResponse;
	if (!soap_endpoint)
	{
		//soap_endpoint = "http://10.10.100.48:88/OAapp/WebObjects/OAapp.woa/ws/Services";

		char serverURL[128];
		char *serverpath="/OAapp/WebObjects/OAapp.woa/ws/Services";
		strcpy(serverURL,usrAuth.serverip);
		strcat(serverURL,serverpath);
		soap_endpoint=serverURL;
	}    
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__updateOrdersRead._pwd = _pwd;
	soap_tmp_ns1__updateOrdersRead._xmlDoc = _xmlDoc;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__updateOrdersRead(soap, &soap_tmp_ns1__updateOrdersRead);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__updateOrdersRead(soap, &soap_tmp_ns1__updateOrdersRead, "ns1:updateOrdersRead", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__updateOrdersRead(soap, &soap_tmp_ns1__updateOrdersRead, "ns1:updateOrdersRead", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	_updateOrdersReadReturn = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns1__updateOrdersReadResponse = soap_get_ns1__updateOrdersReadResponse(soap, NULL, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	_updateOrdersReadReturn = soap_tmp_ns1__updateOrdersReadResponse->_updateOrdersReadReturn;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
